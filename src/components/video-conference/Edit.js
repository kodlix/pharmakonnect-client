
import React, { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useForm, Controller } from 'react-hook-form';
import { editMeeting, loadMeetingByUser } from '../../store/modules/scheduleMeeting';
import { showErrorMessage } from '../../store/modules/notification';
import { formatter } from '../Shared/helpers/converter';
import moment from 'moment'
import DatePicker from "react-datepicker";
import { v4 as uuidv4 } from 'uuid';
import VideoConferenceNavbar from './VideoConferenceNavbar'

import './VideoConference.css';
import "react-datepicker/dist/react-datepicker.css";
import ScheduledMeetings from './List';


const EditScheduledMeeting = (props) => {
    const meetingKeys = ["durationInHours", "durationInMinutes", "topic", "startDate", "startTime", "meetingId", "recordMeeting",
        "passcode", "waitingRoom", "description", "hostVideo"]

    const dispatch = useDispatch();
    const { handleSubmit, register, errors, setValue, } = useForm({
        mode: "onChange",
        reValidateMode: "onChange"
    });

    const [errorMessage, setErrorMessage] = useState('');
    const [autoGenerateId, setAutoGenerateId] = useState('');
    const [usePersonalID, setUsePersonalID] = useState('');


    const [checkedPersonalId, setCheckedPersonalId] = useState(false);
    const [checkedAutoGeneratedId, setCheckedAutoGenerateId] = useState(false);
    const [defaultMeetingId, setDefaultMeetingId] = useState('');


    const scheduledmeeting = useSelector(state => state.scheduleMeeting.meeting);
    const meetingId = props.match.params.id;

    useEffect(() => {
        dispatch(loadMeetingByUser(meetingId))
    }, [dispatch])


    useEffect(() => {
        if (scheduledmeeting) {
            meetingKeys.map(key => { setValue(key, scheduledmeeting[key]) })
            scheduledmeeting.startDate && setValue("startDate", scheduledmeeting.startDate.substr(0, 10))
            if (scheduledmeeting.topic) {
                setValue("hostVideo", scheduledmeeting.hostVideo.toString())
                setValue("participantVideo", scheduledmeeting.participantVideo.toString())
                setValue("waitingRoom", scheduledmeeting.waitingRoom.toString())
                setValue("meetingID", scheduledmeeting.meetingID.toString())

            }
            setValue("allowParticipantJoinAnytime", scheduledmeeting.allowParticipantJoinAnytime);
            setValue("recordMeeting", scheduledmeeting.recordMeeting);
            setValue("muteParticipantOnEntry", scheduledmeeting.muteParticipantOnEntry)
            // setValue("meetingID", scheduledmeeting.meetingID)

            setAutoGenerateId(scheduledmeeting.meetingID);
            setDefaultMeetingId(scheduledmeeting.meetingID);
            if (scheduledmeeting.meetingID && scheduledmeeting.meetingID.length < 8) {
                setCheckedPersonalId(true);
                setCheckedAutoGenerateId(false);
            }
            if (scheduledmeeting.meetingID && scheduledmeeting.meetingID.length > 8) {
                setCheckedAutoGenerateId(true);
                setCheckedPersonalId(false);
            }
        }



    }, [scheduledmeeting])

    const generateId = () => {
        let generatedID = uuidv4();
        return generatedID;
    }
    const personalId = () => {
        let personalID = "89284uH";
        return personalID;
    }
    const handlePesonalId = (e) => {
        setCheckedPersonalId(true)
        setCheckedAutoGenerateId(false);
        // console.log(`checked personal id  ${checkedPersonalId} ::: auto generated id ${checkedAutoGeneratedId}`);

        let personalMeetingID = e.target.value;
        if (personalMeetingID) {
            setAutoGenerateId(personalId());
        }
    }

    const handleAutogenerateId = (e) => {
        setCheckedPersonalId(false);
        setCheckedAutoGenerateId(true);

        const formatMeetingID = defaultMeetingId.split('-');
        const generatedMeetingID = formatMeetingID[1] != null ? defaultMeetingId : generateId();
        // setAutoGenerateId(generatedMeetingID);
        // setUsePersonalID(false);
        setAutoGenerateId(generatedMeetingID);
        // if (generatedMeetingID && generatedMeetingID.length > 8) {
        //     setAutoGenerateId(generateId());
        // } else {
        //     // setUsePersonalID(false);
        //     setAutoGenerateId(personalId());
        // }

    }
    const onSubmit = (meetingdata) => {

        meetingdata.durationInHours = parseInt(meetingdata.durationInHours);
        meetingdata.durationInMinutes = parseInt(meetingdata.durationInMinutes);
        dispatch(editMeeting(meetingId, meetingdata));
    }

    return (
        <>

            <VideoConferenceNavbar />
            <form onSubmit={handleSubmit(onSubmit)} className='col-lg-9 col-md-8 col-12'>

                <div style={{ marginTop: "10%" }} className="container layout" id='schedule-meeting'>
                    <div className="row">
                        <div className="col-12 h3 mt-5 text-center">Schedule a Meeting</div>
                    </div>

                    <div className="row mt-2">
                        <div className="col-12  mb-3">
                            <label className="font-weight-bolder">SCHEDULE</label><br />
                            <label>Topic * <span className="text-danger pl-2">{errors.topic && "Topic is required"}</span>
                            </label>
                            <input type="text"
                                id='topic'
                                name="topic"
                                className="form-control rounded-2" placeholder="topic of meeting"
                                ref={register({ required: true })}
                            />

                        </div>

                        <div className="col-12   custom-control-inline mb-3">
                            <div className="col-md-6 pl-0">
                                <label>Start Date *{errors.startDate && <span className="text-danger pl-2">{errors.startDate.message}</span>}</label>
                                {/* <div>
                                    <Controller
                                        control={control}
                                        name="startDate"
                                        render={(props) => (
                                            <DatePicker
                                                className="form-control"
                                                placeholderText="Select year"
                                                onChange={(e) => props.onChange(e)}
                                                selected={props.value}
                                                minDate={moment().toDate()}
                                                // showYearPicker
                                                dateFormat="yyyy-MM-d"
                                            />
                                        )}
                                    />

                                </div> */}

                                <input type="date"
                                    id='startDate'
                                    name="startDate"
                                    className="form-control rounded-2"
                                    ref={register({
                                        required: "Start Date is required",
                                        // validate: value => !value || value < new Date() || "ok"
                                    })}
                                />
                            </div>
                            <div className="col-md-6 pl-0">
                                <label>Start Time *  <span className="text-danger pl-2">{errors.topic && "Start time is required"}</span></label>
                                <input type="time"
                                    id='startTime'
                                    name="startTime"
                                    className="form-control rounded-2"
                                    placeholder=""
                                    ref={register({ required: true })}
                                />
                            </div>

                        </div>

                        <div className="col-12   custom-control-inline mb-3">
                            <div className="form-group col-12 col-md-6">
                                <label className="form-label">Duration in hours * <span className="text-danger pl-2">{errors.topic && "Duration is required"}</span></label>
                                <select
                                    id="durationInHours"
                                    type="number"
                                    className="form-control"
                                    ref={register({ required: true })}
                                    name="durationInHours"
                                >
                                    <option value="0">0 hour</option>
                                    <option value="1">1 hour</option>
                                    <option value="2">2 hours</option>
                                    <option value="3">3 hours</option>
                                    <option value="4">4 hours</option>
                                    <option value="5">5 hours</option>
                                    <option value="6">6 hours</option>
                                    <option value="7">7 hours</option>
                                    <option value="8">8 hours</option>
                                    <option value="9">9 hours</option>
                                    <option value="10">10 hours</option>
                                    <option value="11">11 hours</option>
                                    <option value="12">12 hours</option>
                                    <option value="13">13 hours</option>
                                    <option value="14">14 hours</option>
                                    <option value="15">15 hours</option>
                                    <option value="16">16 hours</option>
                                    <option value="17">17 hours</option>
                                    <option value="18">18 hours</option>
                                    <option value="19">19 hours</option>
                                    <option value="20">20 hours</option>
                                    <option value="21">21 hours</option>
                                    <option value="22">22 hours</option>
                                    <option value="23">23 hours</option>
                                    <option value="24">24 hours</option>
                                </select>
                            </div>

                            <div className="form-group col-12 col-md-6">
                                <label className="form-label">Duration in minutes *  <span className="text-danger pl-2">{errors.topic && " Duration in Minute is required"}</span></label>
                                <select
                                    type="number"
                                    id="durationInMinutes"
                                    className="form-control"
                                    ref={register()}
                                    name="durationInMinutes"
                                >
                                    <option value="0">0 minute</option>
                                    <option value="15">15 minutes</option>
                                    <option value="30">30 minutes</option>
                                    <option value="45">45 minutes</option>

                                </select>
                            </div>
                        </div>

                        {/* <div className="col-12   custom-control-inline">
                            <div
                                className="custom-control custom-checkbox">
                                <input type="checkbox"
                                    id="reoccuring"
                                    name="reoccuring"
                                    className="custom-control-input"
                                    ref={register}

                                />
                                <label className="custom-control-label"
                                    htmlFor="reoccuring"><span
                                        className="text-dark">Reoccuring</span></label>
                            </div>
                        </div> */}
                    </div>

                    <div className="row mt-2">
                        <label className="col-12 mb-3">
                            <label className="font-weight-bolder">MEETING ID</label><br />

                            <div className="custom-control">
                                <input type="radio"
                                    id="autoGeneratedmeetingID"
                                    name="meetingID"
                                    onChange={handleAutogenerateId}
                                    value={autoGenerateId}
                                    checked={checkedAutoGeneratedId}
                                    ref={register}

                                />
                                <label className=""
                                    htmlFor="autoGeneratedmeetingID"><span
                                        className="text-dark pb-4 pl-2">Auto Generate</span></label>
                            </div>
                            <div className="custom-control">
                                <input type="radio"
                                    id="personalmeetingID"
                                    name="meetingID"
                                    value={autoGenerateId}
                                    checked={checkedPersonalId}
                                    // className="custom-control-input"
                                    onChange={handlePesonalId}
                                    ref={register}
                                />
                                <label className=""
                                    htmlFor="personalmeetingID"><span
                                        className="text-dark pb-4 pl-2">Personal Meeting ID : </span>
                                    <strong className="text-primary">
                                        {autoGenerateId ? autoGenerateId : scheduledmeeting.meetingID}</strong></label>
                            </div>
                        </label>
                    </div>

                    <div className="row mt-2">
                        <label className="col-12 mb-3">
                            <label className="font-weight-bolder">SECURITY</label><br />

                            <div className="col-12 mb-3">
                                <label htmlFor="passcode"> <input type="checkbox" id="passcode" checked={true} /> &nbsp;
                                    <span className="text-dark">Passcode </span><br />
                                    <small className="">Only users with Passode or Link</small><br />
                                </label>
                                <div className="col-6 custom-control custom-control-inline">

                                    <div>
                                        <input type="text"
                                            id="passcode"
                                            name="passcode"
                                            className="form-control rounded-2"
                                            ref={register}
                                        />
                                    </div>
                                </div>

                            </div>
                            <div className="row mt-2">
                                <label className="col-12 mb-0">
                                    <div className="custom-control">
                                        <input type="radio"
                                            id="waitingRoomOn"
                                            name="waitingRoom"
                                            ref={register}
                                            value="true"
                                            checked={editMeeting?.waitingRoom}
                                        />
                                        <label className=""
                                            htmlFor="waitingRoomOn"><span
                                                className="text-dark pb-4 pl-2">Waiting Room</span> <br />
                                        </label>
                                        {/* <small className="">Only users admitted by host can join the meeting</small> */}

                                    </div>
                                    <div className="custom-control">
                                        <input type="radio"
                                            // defaultChecked
                                            id="allowParticipantJoinAnytime"
                                            name="waitingRoom"
                                            ref={register}
                                            checked={editMeeting?.waitingRoom}
                                            value="false"
                                        />
                                        <label className=""
                                            htmlFor="allowParticipantJoinAnytime"><span
                                                className="text-dark  pb-4 pl-2">Allow Participants to can join anytime</span>
                                        </label>
                                    </div>
                                </label>
                            </div>
                            {/* <div className="custom-control custom-checkbox custom-control-inline">

                                <input type="checkbox"
                                    id="waitingRoom"
                                    name="waitingRoom"
                                    className="custom-control-input"
                                    checked={editMeeting?.waitingRoom}
                                    ref={register}
                                />

                                <label className="custom-control-label"
                                    htmlFor="waitingRoom"><span className="text-dark">Waiting Room</span><br />
                                    <small className="">Only users admitted by host can join the meeting</small>
                                </label>
                            </div> */}
                        </label>
                    </div>

                    <div className="col-12   mb-3">
                        <label>Description</label>
                        <textarea type="text"
                            className="form-control rounded-2"
                            id="description"
                            name="description"
                            rows="2" cols="50"
                            ref={register}
                        ></textarea>
                    </div>

                    <div className="row mt-2">
                        <label className="col-12 mb-3">
                            <label className="font-weight-bolder">VIDEO</label><br />
                            <label className="font-weight-bolder">Host:&nbsp;</label>
                            <div
                                className="custom-control custom-radio custom-control-inline">
                                <input type="radio"
                                    id="hostVideoon"
                                    name="hostVideo"
                                    className="custom-control-input"
                                    value="true"
                                    ref={register}
                                />
                                <label className="custom-control-label "
                                    htmlFor="hostVideoon"><span
                                        className="text-dark">ON</span></label>
                            </div>
                            <div
                                className="custom-control custom-radio custom-control-inline">
                                <input type="radio"
                                    id="hostVideooff"
                                    name="hostVideo"
                                    value="false"
                                    ref={register}

                                    className="custom-control-input"
                                />
                                <label className="custom-control-label"
                                    htmlFor="hostVideooff"><span
                                        className="text-dark">OFF</span></label>
                            </div>
                            <label className="font-weight-bolder ml-4">Participants:&nbsp;</label>
                            <div
                                className="custom-control custom-radio custom-control-inline ml-2">
                                <input type="radio"
                                    id="participantVideoon"
                                    name="participantVideo"
                                    value="true"
                                    className="custom-control-input"
                                    ref={register}
                                />
                                <label className="custom-control-label "
                                    htmlFor="participantVideoon"><span
                                        className="text-dark">ON</span></label>
                            </div>
                            <div
                                className="custom-control custom-radio custom-control-inline">
                                <input type="radio"
                                    id="participantVideooff"
                                    name="participantVideo"
                                    className="custom-control-input"
                                    value="false"
                                    ref={register}
                                />
                                <label className="custom-control-label"
                                    htmlFor="participantVideooff"><span
                                        className="text-dark">OFF</span></label>
                            </div>
                        </label>
                    </div>

                    <div className="row mt-2">
                        <label className="col-12 col-md-6  mb-3">
                            <label className="font-weight-bolder">ADVANCE OPTION</label><br />

                            {/* <div
                                className="custom-control custom-checkbox custom-control-inline">
                                <input type="checkbox"
                                    id="allowParticipantJoinAnytime"
                                    name="allowParticipantJoinAnytime"
                                    className="custom-control-input"
                                    ref={register}
                                />
                                <label className="custom-control-label"
                                    htmlFor="allowParticipantJoinAnytime">
                                    <small className="">Allow participants to join any time</small>
                                </label>
                            </div> */}
                            <div
                                className="custom-control custom-checkbox custom-control-inline">
                                <input type="checkbox"
                                    id="muteParticipantOnEntry"
                                    name="muteParticipantOnEntry"
                                    className="custom-control-input"
                                    ref={register}
                                />
                                <label className="custom-control-label"
                                    htmlFor="muteParticipantOnEntry">
                                    <small className="">Mute participants upon entry</small>
                                </label>
                            </div>
                            <div
                                className="custom-control custom-checkbox custom-control-inline">
                                <input type="checkbox"
                                    id="recordMeeting"
                                    name="recordMeeting"
                                    className="custom-control-input"
                                    ref={register}
                                />
                                <label className="custom-control-label"
                                    htmlFor="recordMeeting">
                                    <small className="">Automatically record meeting on the local computer</small>
                                </label>
                            </div>
                        </label>
                        <div className="col-12   mb-3">
                            <button id='create-room' className="font-weight-bolder btn btn-block rounded-2 btn-primary">Save
                                      meeting schedule</button>
                        </div>
                    </div>
                </div>
            </form>
        </>
    )
}
export default EditScheduledMeeting;


